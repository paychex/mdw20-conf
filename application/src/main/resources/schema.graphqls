scalar Date

schema {
    query: Query
    subscription: Subscription
}

type Query {
    clientById(id: ID!): Client
    employeeById(id: ID!): Employee
}

type Client {
    clientId: ID!
    clientName: String
    premium: Boolean!
    address: String
    country: String
    active: Boolean!
    employees: [Employee]!
    region: String!
    replicaSetName: String!
}

type Employee {
    employeeId: ID!
    active: Boolean!
    firstName: String
    lastName: String
    ssn: String
    bloodType: String
    phone: String
    salary: Float
    dob: Date
    client: Client!
    region: String!
    replicaSetName: String!
}

type Subscription {
    clientChanges: ClientChangeEvent!
#    employeeChanges: EmployeeChangeEvent!
}

#type EmployeeChangeEvent {
#    operationType: String
#    employee: Employee
#}

type ClientChangeEvent {
    operationType: String
    documentKey: Client
    fullDocument: Client
}